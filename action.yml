name: 'GitOps Automatic Versioning'
author: 'EvilKittenLord'
description: 'Automatically determine semantic version based on branch merge history.'
branding:
  icon: git-branch
  color: white
inputs:
  force-re-evaluate:
    description: "Forces a re-evaluation of the entire git history."
    required: false
    default: 'false'
  force-patch-increment:
    description: "Forces a PATCH increment if no other increment detected. NOTE: This is intended for development purposes only."
    required: false
    default: 'false'
outputs:
  new-version:
    description: "New Version"
    value: ${{ steps.new-version.outputs.new-version }}
  previous-version:
    description: "Previous Version"
    value: ${{ steps.previous-version.outputs.previous-version }}
runs:
  using: "composite"
  steps:
    - name: Checkout to the depth of the last DETECTED version.
      uses: AlexAtkinson/github-action-checkout-from-tag@latest
    - name: Detect Previous Version
      id: previous-version
      run: |
          cd $GITHUB_WORKSPACE
          echo "previous-version=$(${{ github.action_path }}/scripts/detectPreviousVersion.sh)" | tee $GITHUB_OUTPUT
      shell: bash
    - name: Detect New Version
      id: new-version
      run: |
          cd $GITHUB_WORKSPACE
          opt=''
          [[ "${{ inputs.force-re-evaluate }}" == 'true' ]] && opt='-f'
          [[ "${{ inputs.force-re-evaluate }}" == 'true' ]] && opt='-p'
          new_version="$(${{ github.action_path }}/scripts/detectNewVersion.sh $opt)"
          echo "new-version=$new_version" | tee $GITHUB_OUTPUT
          if [[ "$new_version" =~ "570" ]]; then
            echo -e "\e[01;31mERROR\e[00m: 570 - Invalid argument!"
            exit 1 || true
          fi
          if [[ "$new_version" =~ "590" ]]; then
            echo -e "\e[01;31mFATAL\e[00m: 501 - This is not a git repository!"
            exit 1 || true
          fi
          if [[ "$new_version" =~ "591" ]]; then
            echo -e "\e[01;31mERROR\e[0m: 591 - Unsupported origin host."
            exit 1 || true
          fi
          if [[ "$new_version" =~ "599" ]]; then
            echo -e "\e[01;31mERROR\e[00m: 599 - No feature, enhancement, fix, bugfix, hotfix, or ops branches detected!"
            exit 1 || true
          fi
      shell: bash

# See github contexts for more like github.action_path.
# REF: https://docs.github.com/en/actions/learn-github-actions/contexts#github-context